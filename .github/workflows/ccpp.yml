name: Project CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  normal:
    strategy:
      matrix:
        config:
        - { name: 'Windows', os: windows-latest }
        - { name: 'macOS', os: macos-latest }
        - { name: 'Ubuntu', os: ubuntu-latest }
      fail-fast: false

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure
      run:  cmake -B $PWD/build -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      run:  cmake --build $PWD/build

    - name: Test
      run: |
        cd $PWD/build

        export TOOLPATH=${PWD}/tools
        if [ '${{ matrix.config.name }}' == 'Windows' ]; then
          export TOOLPATH=${TOOLPATH}/Debug
          function print_hash() {
            CertUtil -hashfile "$1"
          }
        elif [ '${{ matrix.config.name }}' == 'macOS' ]; then
          function print_hash() {
            shasum -a 256 "$1"
          }
        else
          function print_hash() {
            sha256sum "$1"
          }
        fi
        export PATH=${TOOLPATH}:${PATH}
        export -f print_hash

        loadtest ../examples/P86/RC1.P86
        mv TEST_MEM.P86 LOADTEST_MEM.P86
        mv TEST_FIL.P86 LOADTEST_FIL.P86

        p86extract LOADTEST_MEM.P86
        p86create TEST.*.RAW
        mv TEST.P86 P86CREATE.P86

        print_hash ../examples/P86/RC1.P86
        print_hash LOADTEST_MEM.P86
        print_hash LOADTEST_FIL.P86
        print_hash P86CREATE.P86

  dos:
    name: 'DOS'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v16
      with:
        nix_path: "nixpkgs=channel:nixos-unstable"

    - name: Configure
      run: |
        cat <<EOF >configure.sh
        #!/usr/bin/env bash
        unset CC
        unset CXX
        cmake -B $PWD/build -G "Watcom WMake" -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_SYSTEM_NAME=DOS -DCMAKE_SYSTEM_PROCESSOR=I86
        EOF
        chmod +x configure.sh

        nix-shell $PWD/.github/dos-shell.nix --run ./configure.sh

    - name: Build
      run: |
        echo "cmake --build $PWD/build" > build.sh
        chmod +x build.sh

        nix-shell $PWD/.github/dos-shell.nix --run ./build.sh

    - name: Test
      run: |
        cat <<EOF >dosbox.config
        [autoexec]
        MOUNT C $PWD
        C:
        CD BUILD
        TOOLS\LOADTEST.EXE ..\EXAMPLES\P86\RC1.P86 > LOAD.LOG
        TOOLS\P86EXT~1.EXE TEST_M~1.P86 > EXT.LOG
        TOOLS\P86CRE~1.EXE TEST.0~1.RAW TEST.0~2.RAW TEST.0~3.RAW TEST.0~4.RAW TEST.0~5.RAW > CRE.LOG
        EXIT
        EOF

        nix-shell $PWD/.github/dos-shell.nix --run dosbox

        cd build
        cat LOAD.LOG
        grep ERROR LOAD.LOG && exit 1
        cat EXT.LOG
        grep ERROR EXT.LOG && exit 1
        cat CRE.LOG
        grep ERROR CRE.LOG && exit 1
